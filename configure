#!/bin/bash

header="#! /bin/make\n"
header="${header}\nROOT = $(pwd)"
header="${header}\nOBJ = /tmp/.objs"
header="${header}\nSRC = \$(ROOT)/src"
header="${header}\nASM = /tmp/.asms"
header="${header}\nINC = \$(ROOT)/include"
header="${header}\nLIB = \$(ROOT)/lib"
header="${header}\nBIN = \$(ROOT)/bin"
header="${header}\nCXX = g++"
header="${header}\nCC = gcc"
header="${header}\nAR = ar"
header="${header}\nAS = as"
header="${header}\nLD = ld"
header="${header}\nCFLAGS = -c -O3 -Wall"
header="${header}\nCXXFLAGS = -c -O3 -Wall --std=c++11"
header="${header}\nARFLAGS = crsv"
header="${header}\nSHAREFLAGS = -shared -fPIC -lc -lpthread\n"

obj_dir='/tmp/.objs'
if [[ ! -d ${obj_dir} ]]; then
    mkdir /tmp/.objs
fi

function makeout ()
{
    local obj_file=$1
    local src_file=$2
    local ext_name=${src_file#*.}
    a_relation="\$(OBJ)/${obj_file} : \$(SRC)/${src_file}\n"

    if [[ "cpp" == ${ext_name} ]]; then
        a_relation="${a_relation}\t\$(CXX) \$(CXXFLAGS) \$^ -o \$@ -I \$(INC)"
    elif [[ "c" -eq ${ext_name} ]]; then
        #echo ${ext_name}
        a_relation="${a_relation}\t\$(CC) \$(CFLAGS) \$^ -o \$@ -I \$(INC)"
    fi
}

framework='src/framework'
static_libs=$(ls ${framework})
out=''
share_dep=''

for sl in ${static_libs}; do

    static_lib_path=${framework}/${sl}

    if [[ -d ${static_lib_path} ]]; then

        src_files=$(find ${static_lib_path} -type f \( -name '*.c' -or -name '*.cpp' \))
        objs=""
        ocr=""

        for file in $src_files; do

            file=${file:4}
            obj_file=${file//\//_}
            obj_file=${obj_file//./_}.o

            objs="${objs} \$(OBJ)/${obj_file}"
            makeout ${obj_file} ${file}

            ocr="${ocr}\n${a_relation}\n"
        done

        lib_name=`tr '[A-Z]' '[a-z]' <<< "${sl}"`
        lib_name="\$(LIB)/libG${lib_name}.a"
        share_dep="${share_dep} ${lib_name}"
        out="${out}${lib_name} :${objs}\n"
        out="${out}\t\$(AR) \$(ARFLAGS) \$@ \$^\n\n"
        out="${out}${ocr}"

    elif [[ -f ${static_lib_path} ]]; then

        src_file=${static_lib_path:4}
        obj_file=${src_file//\//_}
        obj_file=${obj_file//./_}.o

        makeout ${obj_file} ${src_file}

        share_dep="${share_dep} \$(OBJ)/${obj_file}"
        out="${out}${a_relation}\n"

    fi
    out="${out}\n\n\n"

done

so="\$(LIB)/libFramework.so : ${share_dep}\n"
so="${so}\t\$(CXX) \$(SHAREFLAGS) -o \$@ \$^\n\n\n"

echo -e "${header}\n${so}${out}\n" > makefile
